# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: restore

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# - task: VSTest@2
#   inputs:
#     testSelector: 'testAssemblies'
#     testAssemblyVer2: |
#         **\SEM.*.Tests.dll
#         !**\obj\**
#     searchFolder: '$(System.DefaultWorkingDirectory)'
#     diagnosticsEnabled: true
#     codeCoverageEnabled: true

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack Sem.Tools'
  inputs:
    command: pack
    packagesToPack: 'Sem.Tools/Sem.Tools.csproj'    

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack Sem.Tools.CmdLine'
  inputs:
    command: pack
    packagesToPack: 'Sem.Tools.CmdLine/Sem.Tools.CmdLine.csproj'    

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack Sem.Tools.Logging'
  inputs:
    command: pack
    packagesToPack: 'Sem.Tools.Logging/Sem.Tools.Logging.csproj'    

# - task: NuGetCommand@2
#   displayName: 'NuGet push'
#   inputs:
#     command: push
#     allowPackageConflicts: true
# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: restore

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: |
        **\SEM.*.Tests.dll
         !**\obj\**
    searchFolder: '$(System.DefaultWorkingDirectory)'
    diagnosticsEnabled: true
    codeCoverageEnabled: true

- task: WhiteSource Bolt@20

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack Sem.Tools'
  inputs:
    command: pack
    packagesToPack: 'Sem.Tools/Sem.Tools.csproj'    

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack Sem.Tools.CmdLine'
  inputs:
    command: pack
    packagesToPack: 'Sem.Tools.CmdLine/Sem.Tools.CmdLine.csproj'    

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack Sem.Tools.Logging'
  inputs:
    command: pack
    packagesToPack: 'Sem.Tools.Logging/Sem.Tools.Logging.csproj'

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack Sem.Data.SprocAccess'
  inputs:
    command: pack
    packagesToPack: 'Sem.Data.SprocAccess/Sem.Data.SprocAccess.csproj'

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack Sem.Data.SprocAccess.FileSystem'
  inputs:
    command: pack
    packagesToPack: 'Sem.Data.SprocAccess.FileSystem/Sem.Data.SprocAccess.FileSystem.csproj'

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack Sem.Tools.TestHelper'
  inputs:
    command: pack
    packagesToPack: 'Sem.Tools.TestHelper/Sem.Tools.TestHelper.csproj'

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack Sem.Data.SprocAccess.SqlServer'
  inputs:
    command: pack
    packagesToPack: 'Sem.Data.SprocAccess.SqlServer/Sem.Data.SprocAccess.SqlServer.csproj'

- script: dotnet nuget push $(Build.ArtifactStagingDirectory)/**/*.nupkg --source https://api.nuget.org/v3/index.json --api-key $(NUGET_API_KEY) --skip-duplicate --no-symbols true
  displayName: 'Uploads nuGet packages'
